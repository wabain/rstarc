[tests]
enabled = ["ir", "run"]

[ir]
returncode = "0"
stdout = """
global Z<0>

main:
  Func One := store mysterious
  Temp := store mysterious
  X := store mysterious
  Y := store mysterious
  X := store 1
  Y := store 1
  Z := store 1
  Func One := store Function(1)
  say "invoking function"
  Temp := call Func One, [1]
  say "checking globals"
  say "x"
  say X
  say "y"
  say Y
  say "z"
  say Z
  return-default

;
; Function Func One takes X, Y
; Scope is 1
;
f1_Func_One:
  X := load-arg 0
  Y := load-arg 1
  say "x"
  say X
  say "y"
  say Y
  say "z"
  say Z<0>
  say ""
  say "incrementing within function"
  X := add X, 1
  Y := add Y, 1
  Z<0> := add Z<0>, 1
  say "x"
  say X
  say "y"
  say Y
  say "z"
  say Z<0>
  say ""
  return-default
"""

[run]
returncode = "0"
stdout = """
invoking function
x
1
y
mysterious
z
1

incrementing within function
x
2
y
NaN
z
2

checking globals
x
1
y
1
z
2
"""
