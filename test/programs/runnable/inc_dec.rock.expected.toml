[tests]
enabled = ["ast", "pretty", "ir", "run"]

[ast]
returncode = "0"
stdout = """
Assign(
  ProperVar("X" borrowed),
  NumberLiteral(10.0),
),
Incr(
  ProperVar("X" borrowed),
  3,
),
Say(
  ProperVar("X" borrowed),
),
Decr(
  ProperVar("X" borrowed),
  3,
),
Say(
  ProperVar("X" borrowed),
),
Assign(
  ProperVar("Y" borrowed),
  BooleanLiteral(false),
),
Incr(
  ProperVar("Y" borrowed),
  2,
),
Say(
  ProperVar("Y" borrowed),
),
Decr(
  ProperVar("Y" borrowed),
  2,
),
Say(
  ProperVar("Y" borrowed),
),
Incr(
  ProperVar("Y" borrowed),
  3,
),
Say(
  ProperVar("Y" borrowed),
),
Decr(
  ProperVar("Y" borrowed),
  3,
),
Say(
  ProperVar("Y" borrowed),
),
"""

[pretty]
returncode = "0"
stdout = """
Put 10 into X
Build X up up up
Say X
Knock X down down down
Say X
Put false into Y
Build Y up up
Say Y
Knock Y down down
Say Y
Build Y up up up
Say Y
Knock Y down down down
Say Y
"""

[ir]
returncode = "0"
stdout = """
main:
  X := store mysterious
  Y := store mysterious
  X := store 10
  X := in-place incr 3
  say X
  X := in-place decr 3
  say X
  Y := store false
  Y := in-place incr 2
  say Y
  Y := in-place decr 2
  say Y
  Y := in-place incr 3
  say Y
  Y := in-place decr 3
  say Y
  return-default
"""

[run]
returncode = "0"
stdout = """
13
10
false
false
true
false
"""
